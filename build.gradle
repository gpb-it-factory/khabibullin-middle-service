plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.openapi.generator' version '7.2.0'
}

group = 'gpb.dus'
version = '0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	mapstructVersion = "1.5.5.Final"
	lombokVersion = "1.18.32"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.swagger.core.v3:swagger-core:2.2.20'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.1'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'io.swagger:swagger-annotations:1.6.14'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.4.Final'
	implementation 'org.springframework:spring-web:6.1.9'
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'
	compileOnly "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.wiremock:wiremock-standalone:3.3.1'
	testImplementation 'org.mockito:mockito-core:3.12.4'
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName.set("spring")
	inputSpec.set("$rootDir/src/main/resources/openapi/apispec.yaml")
	outputDir.set("$projectDir")
	apiPackage.set("gpb.dus.middle.api.generated")
	modelPackage.set("gpb.dus.middle.api.generated.model")
	generateApiTests.set(false)
	apiNameSuffix="Resource"
	modelNameSuffix="Api"
	ignoreFileOverride.set(file("$rootDir/src/main/resources/openapi/.openapi-generator-java-sources.ignore").toString())
	configOptions.set([
			"useSpringBoot3": "true",
			"interfaceOnly"      : "true",
			"useBeanValidation"  : "true",
			"enumPropertyNaming" : "UPPERCASE",
			"defaultInterfaces"  : "false",
			"useTags"            : "true",
			"useJakartaEe"       : "true",
			"skipDefaultInterface": "true"
	])
	globalProperties.set([
			modelDocs      : "false",
			models         : "",
			apis           : "",
	])
	typeMappings = [
			"date"   : "OffsetDateTime",
			"instant": "LocalDate"
	]
	importMappings = [
			OffsetDateTime: "java.time.OffsetDateTime",
			LocalDate     : "java.time.LocalDate"
	]
}

